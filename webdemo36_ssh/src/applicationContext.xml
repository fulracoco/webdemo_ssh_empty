<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xmlns:context="http://www.springframework.org/schema/context"
             xmlns:aop="http://www.springframework.org/schema/aop"
             xmlns:util="http://www.springframework.org/schema/util"
             xmlns:cache="http://www.springframework.org/schema/cache"
             xmlns:tx="http://www.springframework.org/schema/tx"
             xsi:schemaLocation="http://www.springframework.org/schema/beans
                     http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
                     http://www.springframework.org/schema/context
                     http://www.springframework.org/schema/context/spring-context-3.2.xsd
                     http://www.springframework.org/schema/aop
                     http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
                     http://www.springframework.org/schema/util
                     http://www.springframework.org/schema/util/spring-util-3.2.xsd
                     http://www.springframework.org/schema/cache
                     http://www.springframework.org/schema/cache/spring-cache-3.2.xsd
                     http://www.springframework.org/schema/tx
                     http://www.springframework.org/schema/tx/spring-tx-3.2.xsd">
                     
    <!-- 开启IOC注解扫描 -->
	<context:component-scan base-package="com.tk" />
	
	<!-- 开启MVC注解扫描 -->
	<!-- <mvc:annotation-driven /> -->
 
	<!-- 加载jdbc资源文件 -->
	<util:properties id="jdbc" location="classpath:jdbc.properties"/>
	
	<!-- 定义数据源 -->
	<!-- <bean id="ds" 
		class="com.mchange.v2.c3p0.ComboPooledDataSource"
		destroy-method="close">
		<property name="jdbcUrl" value="#{jdbc.url}"/>
		<property name="driverClass" value="#{jdbc.driver}"/>
		<property name="user" value="#{jdbc.user}"/>
		<property name="password" value="#{jdbc.password}"/>
		<property name="initialPoolSize" value="#{jdbc.initialPoolSize}"/>
		<property name="maxPoolSize" value="#{jdbc.maxPoolSize}"/>
		<property name="minPoolSize" value="#{jdbc.minPoolSize}"/>
		<property name="acquireIncrement" value="#{jdbc.acquireIncrement}"/>
		<property name="maxIdleTime" value="#{jdbc.maxIdleTime}"/>
	</bean> -->
	
	
	<bean id="ds" class="com.mchange.v2.c3p0.ComboPooledDataSource"  
        destroy-method="close">  
        <property name="driverClass">  
            <value>com.mysql.jdbc.Driver</value>  
        </property>  
        <property name="jdbcUrl">  
            <value>jdbc:mysql://127.0.0.1:3306/jsd?useUnicode=true&amp;characterEncoding=utf-8&amp;useSSL=true</value>  
        </property>  
        <property name="user">  
            <value>root</value>  
        </property>  
        <property name="password">  
            <value>root</value>  
        </property>  
        <property name="maxPoolSize">  
            <value>80</value>  
        </property>  
        <property name="minPoolSize">  
            <value>1</value>  
        </property>  
        <property name="initialPoolSize">  
            <value>1</value>  
        </property>  
        <property name="maxIdleTime">  
            <value>20</value>  
        </property>  
    </bean>  
	
	<!-- 定义sqlSessionFactory -->
	<bean id="sessionFactory"  class="org.springframework.orm.hibernate3.LocalSessionFactoryBean">  
		<property name="dataSource" ref="ds" />
		<property name="hibernateProperties"> 
			<props>
				<prop key="hibernate.dialect">
					org.hibernate.dialect.MySQLDialect
				</prop>
				<prop key="hibernate.show_sql">
					true
				</prop>
				<prop key="hibernate.format_sql">
					true
				</prop>
			</props>
		</property>
		 <property name="mappingResources">
            <list>  
                <value>com/tk/pojo/Cost.hbm.xml</value>  
            </list>  
        </property>  
    </bean>
    
	<!-- 开启 aspectj 的AOP -->
    <aop:aspectj-autoproxy proxy-target-class="true"></aop:aspectj-autoproxy>
	


	<!-- 声明式事务 -->
	<bean id="txManager" class="org.springframework.orm.hibernate3.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory"></property>
	</bean>
	
	<!-- 配置式事务管理 -->
	<tx:advice id="txAdvice" transaction-manager="txManager">
		<tx:attributes>
			<tx:method name="find*" read-only="true" />
			<tx:method name="load*" read-only="true" />
			<tx:method name="add*" propagation="REQUIRED" rollback-for="java.lang.Exception"/>
			<tx:method name="update*" propagation="REQUIRED" rollback-for="java.lang.Exception"/>
			<tx:method name="delete*" propagation="REQUIRED" rollback-for="java.lang.Exception"/>
			<tx:method name="create*" propagation="REQUIRED" rollback-for="java.lang.Exception"/>
		</tx:attributes>
	</tx:advice>
	<aop:config proxy-target-class="true">
		<aop:advisor advice-ref="txAdvice" pointcut="within(com.tk.action..*)" />
	</aop:config>
	
	
	<!-- 开启事务注解标记@Transactional -->
	<!-- 当调用带@Transcatioanl标记的方法时 将txManager事务管理切入进去 -->
	<tx:annotation-driven transaction-manager="txManager"/>
	
	
</beans>